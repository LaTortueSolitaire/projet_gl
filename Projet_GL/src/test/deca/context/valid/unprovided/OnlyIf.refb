`> [5, 0] Program
   +> [5, 0] ListDeclClass [List with 0 elements]
   `> [5, 0] Main
      +> [6, 2] ListDeclVar [List with 2 elements]
      |  []> [6, 6] DeclVar
      |  ||  +> [6, 2] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [6, 6] Identifier (x)
      |  ||  |  definition: variable defined at [6, 6], type=int
      |  ||  `> [6, 6] Initialization
      |  ||     `> [6, 10] UnaryMinus
      |  ||        type: int
      |  ||        `> [6, 11] Int (2)
      |  ||           type: int
      |  []> [7, 8] DeclVar
      |      +> [7, 2] Identifier (float)
      |      |  definition: type (builtin), type=float
      |      +> [7, 8] Identifier (y)
      |      |  definition: variable defined at [7, 8], type=float
      |      `> [7, 8] Initialization
      |         `> [7, 12] Float (2.2)
      |            type: float
      `> [8, 2] ListInst [List with 1 elements]
         []> [8, 2] IfThenElse
             +> [8, 6] And
             |  type: boolean
             |  +> [8, 6] Lower
             |  |  type: boolean
             |  |  +> ConvFloat
             |  |  |  type: float
             |  |  |  `> [8, 6] Identifier (x)
             |  |  |     definition: variable defined at [6, 6], type=int
             |  |  `> [8, 10] Float (2.2)
             |  |     type: float
             |  `> [8, 17] NotEquals
             |     type: boolean
             |     +> [8, 17] Identifier (y)
             |     |  definition: variable defined at [7, 8], type=float
             |     `> ConvFloat
             |        type: float
             |        `> [8, 22] Int (2)
             |           type: int
             +> [9, 4] ListInst [List with 1 elements]
             |  []> [9, 4] Println
             |      `> [9, 12] ListExpr [List with 1 elements]
             |         []> [9, 12] StringLiteral ("convertion en flottant ok ?")
             |             type: string
             `> ListInst [List with 0 elements]
