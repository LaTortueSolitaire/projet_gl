`> [7, 0] Program
   +> [7, 0] ListDeclClass [List with 0 elements]
   `> [7, 0] Main
      +> [8, 1] ListDeclVar [List with 4 elements]
      |  []> [8, 9] DeclVar
      |  ||  +> [8, 1] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [8, 9] Identifier (a)
      |  ||  |  definition: variable defined at [8, 9], type=boolean
      |  ||  `> [8, 9] Initialization
      |  ||     `> [8, 13] BooleanLiteral (true)
      |  ||        type: boolean
      |  []> [9, 9] DeclVar
      |  ||  +> [9, 1] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [9, 9] Identifier (b)
      |  ||  |  definition: variable defined at [9, 9], type=boolean
      |  ||  `> [9, 9] Initialization
      |  ||     `> [9, 13] BooleanLiteral (true)
      |  ||        type: boolean
      |  []> [10, 9] DeclVar
      |  ||  +> [10, 1] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [10, 9] Identifier (c)
      |  ||  |  definition: variable defined at [10, 9], type=boolean
      |  ||  `> [10, 9] Initialization
      |  ||     `> [10, 13] BooleanLiteral (false)
      |  ||        type: boolean
      |  []> [11, 9] DeclVar
      |      +> [11, 1] Identifier (boolean)
      |      |  definition: type (builtin), type=boolean
      |      +> [11, 9] Identifier (d)
      |      |  definition: variable defined at [11, 9], type=boolean
      |      `> [11, 9] Initialization
      |         `> [11, 13] BooleanLiteral (false)
      |            type: boolean
      `> [13, 1] ListInst [List with 2 elements]
         []> [13, 1] IfThenElse
         ||  +> [13, 5] And
         ||  |  type: boolean
         ||  |  +> [13, 5] And
         ||  |  |  type: boolean
         ||  |  |  +> [13, 5] Identifier (a)
         ||  |  |  |  definition: variable defined at [8, 9], type=boolean
         ||  |  |  `> [13, 10] Identifier (b)
         ||  |  |     definition: variable defined at [9, 9], type=boolean
         ||  |  `> [13, 15] Not
         ||  |     type: boolean
         ||  |     `> [13, 16] Identifier (c)
         ||  |        definition: variable defined at [10, 9], type=boolean
         ||  +> [14, 2] ListInst [List with 1 elements]
         ||  |  []> [14, 2] Println
         ||  |      `> [14, 10] ListExpr [List with 1 elements]
         ||  |         []> [14, 10] Int (1)
         ||  |             type: int
         ||  `> ListInst [List with 1 elements]
         ||     []> IfThenElse
         ||         +> [16, 10] Not
         ||         |  type: boolean
         ||         |  `> [16, 11] Identifier (c)
         ||         |     definition: variable defined at [10, 9], type=boolean
         ||         +> [17, 2] ListInst [List with 1 elements]
         ||         |  []> [17, 2] Println
         ||         |      `> [17, 10] ListExpr [List with 1 elements]
         ||         |         []> [17, 10] Int (2)
         ||         |             type: int
         ||         `> ListInst [List with 1 elements]
         ||            []> [20, 2] Println
         ||                `> [20, 10] ListExpr [List with 1 elements]
         ||                   []> [20, 10] Int (3)
         ||                       type: int
         []> [22, 1] IfThenElse
             +> [22, 5] Identifier (d)
             |  definition: variable defined at [11, 9], type=boolean
             +> [23, 2] ListInst [List with 1 elements]
             |  []> [23, 2] Println
             |      `> [23, 10] ListExpr [List with 1 elements]
             |         []> [23, 10] Int (4)
             |             type: int
             `> ListInst [List with 1 elements]
                []> [26, 2] IfThenElse
                    +> [26, 6] Identifier (c)
                    |  definition: variable defined at [10, 9], type=boolean
                    +> [27, 3] ListInst [List with 1 elements]
                    |  []> [27, 3] Println
                    |      `> [27, 11] ListExpr [List with 1 elements]
                    |         []> [27, 11] Int (5)
                    |             type: int
                    `> ListInst [List with 1 elements]
                       []> [30, 3] Println
                           `> [30, 11] ListExpr [List with 1 elements]
                              []> [30, 11] Int (6)
                                  type: int
